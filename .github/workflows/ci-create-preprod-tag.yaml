name: create preprod release tag
on:
  pull_request:
    types: [ labeled ]

jobs:
  create-tag:
    if: ${{ github.event.label.name == 'deploy preprod' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Check Approved Status
        uses: taichi/approved-event-action@v1.2.1
        id: approved
        with:
          approvals: '2'
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - run: echo "Approved !!"
        if: steps.approved.outputs.approved == 'true'

      - name: Print Approved Status
        run: echo "Approved !!"
        if: ${{ steps.approved.outputs.approved == 'true' }}

      - name: Get Latest PreProd Release
        id: version
        uses: ./.github/workflows/get-latest-release
        with:
          myToken: ${{ github.token }}
          exclude_types: "release"
          view_top: 1

      - name: Version Fix
        id: version_fix
        uses: ./.github/workflows/version-fixing
        with:
          version: ${{ steps.version.outputs.tag_name }}
          type: semantic_version

      - name: Bump release version
        id: bump_version
        uses: ./.github/workflows/increment-semantic-version
        with:
          current-version: '${{ steps.version_fix.outputs.modified_version }}'
          version-fragment: 'rc'
      
      - name: Version Fix
        id: version_fix_assembly
        uses: ./.github/workflows/version-fixing
        with:
          version: ${{ steps.bump_version.outputs.next-version }}
          type: assembly_version

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{  steps.version_fix_assembly.outputs.modified_version }}
          release_name: ${{  steps.version_fix_assembly.outputs.modified_version }}
          draft: false
          prerelease: true